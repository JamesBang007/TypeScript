/**
 * tsconfig.json是ts编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
 */
{
  /**
    "include" 用来指定哪些ts文件需要被编译
      路径：** 表示任意目录
            * 表示任意文件
    "exclude" 不需要被编译的文件目录
      默认值：["node_modules", "bower_components", "jspm_packages"]
  */
  "include": ["./src/**/*"],
  //  "exclude": [
  //    "./src/hello/**/*"
  //  ],

  /**
   * compilerOptions 编译器的选项
   */
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Language and Environment */
    // target 用来指定ts被编译为的ES的版本
    "target": "es2016",
    // lib用来指定项目中要使用的库
    // "lib": [],

    /* Modules */
    // module 指定要使用的模块化的规范
    // 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'esnext'
    "module": "es2015",

    /* JavaScript Support */
    // 是否对js文件进行编译，默认是false
    // "allowJs": true,
    // 是否检查js代码是否符合语法规范，默认是false
    // "checkJs": true,

    /* Emit */
    // 将代码合并为一个文件
    // 设置outFile后，所有的全局作用域中的代码会合并到同一个文件中
    // "outFile": "./dist/app.js",
    // outDir 用来指定编译后文件所在的目录
    "outDir": "./dist",
    // 是否移除注释
    "removeComments": true,
    // 不生成编译后的文件
    "noEmit": false,
    // 当有错误时不生成编译后的文件
    "noEmitOnError": true,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    // 所有严格检查的总开关
    "strict": true,
    // 不允许隐式的any类型
    "noImplicitAny": true,
    // 严格的检查空值 “null”和“undefined”
    "strictNullChecks": true,
    // 不允许不明确类型的this
    "noImplicitThis": true,
    // 用来设置编译后的文件是否使用严格模式，默认false
    "alwaysStrict": true

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    // "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
}
